#!/bin/bash

# Script Bash para executar testes
# Facilita a execu√ß√£o de diferentes tipos de testes

echo "üß™ Executando Testes Automatizados com xUnit"
echo "============================================="

# Fun√ß√£o para executar testes com diferentes filtros
run_tests() {
    local filter="$1"
    local description="$2"
    
    echo ""
    echo "üìã $description"
    
    if [ -n "$filter" ]; then
        echo "Comando: dotnet test --filter \"$filter\" --verbosity normal"
        dotnet test --filter "$filter" --verbosity normal
    else
        echo "Comando: dotnet test --verbosity normal"
        dotnet test --verbosity normal
    fi
}

# Fun√ß√£o para executar testes com cobertura
run_tests_with_coverage() {
    local filter="$1"
    
    echo ""
    echo "üìä Executando testes com cobertura de c√≥digo"
    
    if [ -n "$filter" ]; then
        echo "Comando: dotnet test --filter \"$filter\" --collect:\"XPlat Code Coverage\" --results-directory ./TestResults"
        dotnet test --filter "$filter" --collect:"XPlat Code Coverage" --results-directory ./TestResults
    else
        echo "Comando: dotnet test --collect:\"XPlat Code Coverage\" --results-directory ./TestResults"
        dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults
    fi
}

# Menu interativo
show_menu() {
    echo ""
    echo "üéØ Escolha uma op√ß√£o:"
    echo "1. Executar todos os testes"
    echo "2. Executar apenas testes unit√°rios"
    echo "3. Executar apenas testes de integra√ß√£o"
    echo "4. Executar testes com cobertura"
    echo "5. Executar testes espec√≠ficos (exemplos)"
    echo "6. Limpar resultados anteriores"
    echo "7. Sair"
    echo ""
}

# Fun√ß√£o principal
main() {
    while true; do
        show_menu
        read -p "Digite sua escolha (1-7): " choice
        
        case $choice in
            1)
                run_tests "" "Todos os testes"
                ;;
            2)
                run_tests "FullyQualifiedName~Unit" "Testes Unit√°rios"
                ;;
            3)
                run_tests "FullyQualifiedName~Integration" "Testes de Integra√ß√£o"
                ;;
            4)
                run_tests_with_coverage "Todos os testes com cobertura"
                ;;
            5)
                run_tests "FullyQualifiedName~Examples" "Testes de Exemplos"
                ;;
            6)
                echo "üßπ Limpando resultados anteriores..."
                rm -rf ./TestResults
                rm -rf ./CoverageReport
                echo "‚úÖ Limpeza conclu√≠da!"
                ;;
            7)
                echo "üëã Saindo..."
                break
                ;;
            *)
                echo "‚ùå Op√ß√£o inv√°lida. Tente novamente."
                ;;
        esac
        
        if [ "$choice" != "7" ]; then
            echo ""
            echo "Pressione Enter para continuar..."
            read
        fi
    done
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "Tests.csproj" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio Tests/"
    exit 1
fi

# Executar fun√ß√£o principal
main
